<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ws_operation">
    <sys_ws_operation action="INSERT_OR_UPDATE">
        <active>true</active>
        <consumes>application/json,application/xml,text/xml</consumes>
        <consumes_customized>false</consumes_customized>
        <default_operation_uri/>
        <enforce_acl/>
        <http_method>POST</http_method>
        <name>Create</name>
        <operation_script><![CDATA[(function process( /*RESTAPIRequest*/ request, /*RESTAPIResponse*/ response) {

    var standardChangeTemplateSysId = request.getHeader("changeTemplateId"); //Standard change template id retrieved from header
    var standardChangeTemplate = "";
    var payload = request.body.data; // Payload object retrieved from request body  

    var payloadJson = {};
    var changeSchema = new global.change_schemas().standard_change_create; // Schema maintained for ACM
    var acmChangeUtil = new global.ACMChangeRequestUtils(); // Script include with core functions for Automated CR Creation
    var acmChangeValidations = new global.ACMChangeRequestValidations(); // Script include with validation functions for Automated CR Creation

    var release_id = payload['releaseId']; // Release id of a jira release

    var error = new sn_ws_err.ServiceError();
    var defaultLogStart = "ACM CHANGE CREATE API : ";
    var method = "create";
    var auth = request.getHeader("Authorization");
    var authUser = GlideStringUtil.base64Decode(auth.replace("Basic ", "")).split(":")[0];

    acmChangeValidations.apiAuthValidation(authUser); //Authentication validaion for the api request
    acmChangeValidations.standardChangeTemplateValidation(standardChangeTemplateSysId); //Template validation
    acmChangeValidations.intialValidations(method, payload, changeSchema); //Initial Validations

    if (standardChangeTemplateSysId != null) {
        payload["changeTemplateId"] = standardChangeTemplateSysId;
        standardChangeTemplate = global.StandardChangeTemplate.findById(standardChangeTemplateSysId);
    }

    payloadJson = new global.ACMChangeRequestUtils().mapToColumns(payload, changeSchema);
    payloadJson["state"] = "Scheduled";

    var nameValuePairs = global.ChangeCommon.assign({}, request.queryParams, payloadJson);

    if (nameValuePairs) {
        var changeProcess = global.StandardChangeProcess.newChange(standardChangeTemplate, nameValuePairs);
    }

    if (!changeProcess || !changeProcess.getGlideRecord().getUniqueValue()) {

        var errorMessage = "Could not create Standard Change Request.";
        var errorMessages = gs.getErrorMessages();

        if (typeof errorMessages === "object" && errorMessages.length > 0)
            errorMessage += " " + errorMessages;
        gs.error(defaultLogStart + "Change Creation error : " + errorMessage);
        return new sn_ws_err.BadRequestError("Caller provided invalid arguments. Please review the response for error details");
    } else {

        gs.info(defaultLogStart + "Sucessfully Created Change Request " + changeProcess.getGlideRecord().getValue("number"));

        var ch_sysid = changeProcess.getGlideRecord().getUniqueValue();
        try {
            var addToJira = acmChangeUtil.addJiraVersion(payload, ch_sysid);
        } catch (ex) {
            gs.error(defaultLogStart + ex);
        }

        var result = {
            "change_sys_id": changeProcess.getGlideRecord().getUniqueValue(),
            "change_number": changeProcess.getGlideRecord().getValue("number"),
            "status": "OK",
            "message": "Change Request Created Successfully"
        };

        return result;
    }
})(request, response);]]></operation_script>
        <operation_uri>/api/x_jws_scoped_chang/automated_change_creation</operation_uri>
        <produces>application/json,application/xml,text/xml</produces>
        <produces_customized>false</produces_customized>
        <relative_path>/</relative_path>
        <request_example/>
        <requires_acl_authorization>false</requires_acl_authorization>
        <requires_authentication>true</requires_authentication>
        <requires_snc_internal_role>true</requires_snc_internal_role>
        <short_description/>
        <sys_class_name>sys_ws_operation</sys_class_name>
        <sys_created_by>ksamarawee</sys_created_by>
        <sys_created_on>2021-09-02 15:42:29</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>a44354aadbd2f490eaba3ed4e296191e</sys_id>
        <sys_mod_count>4</sys_mod_count>
        <sys_name>Create</sys_name>
        <sys_package display_value="Scoped Change Management" source="x_jws_scoped_chang">fd31db12db1a3490eaba3ed4e2961965</sys_package>
        <sys_policy>read</sys_policy>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Scoped Change Management">fd31db12db1a3490eaba3ed4e2961965</sys_scope>
        <sys_update_name>sys_ws_operation_a44354aadbd2f490eaba3ed4e296191e</sys_update_name>
        <sys_updated_by>ksamarawee</sys_updated_by>
        <sys_updated_on>2021-09-03 04:44:34</sys_updated_on>
        <web_service_definition display_value="Automated Change Creation">13229f56db1e3490eaba3ed4e29619da</web_service_definition>
        <web_service_version/>
    </sys_ws_operation>
</record_update>
